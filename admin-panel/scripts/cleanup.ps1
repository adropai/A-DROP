# PowerShell script to prevent auto-generation of files
# Run this script regularly or add to startup

$ForbiddenFiles = @(
    "app\api\ai-training\models-db\route-new.ts",
    "app\api\cashier\route.ts",
    "app\api\cashier\route-new.ts",
    "app\api\cashier\daily-report\route.ts",
    "app\api\cashier\registers\route.ts",
    "app\api\cashier\transactions\route.ts",
    "app\api\kitchen\stats\route.ts",
    "app\api\inventory\categories\[id]\route.ts",
    "components\cashier\CashierOrderCard.tsx",
    "components\cashier\CashierPage-backup.tsx",
    "components\cashier\PendingOrderCard.tsx",
    "components\kitchen\KitchenStatsCards.tsx",
    "components\kitchen\KitchenTicketCard.tsx",
    "components\customers\CreateCustomerForm-new.tsx",
    "components\common\PersianDatePicker\index.tsx"
)

function Remove-AutoGeneratedFiles {
    $cleanedCount = 0
    
    # Remove specific forbidden files
    foreach ($file in $ForbiddenFiles) {
        if (Test-Path $file) {
            try {
                Remove-Item -Path $file -Force
                Write-Host "‚úÖ Removed: $file" -ForegroundColor Green
                $cleanedCount++
            }
            catch {
                Write-Host "‚ùå Failed to remove: $file" -ForegroundColor Red
            }
        }
    }
    
    # Remove files matching forbidden patterns
    $patterns = @("*-backup.*", "*-new.*", "*-old.*", "*-temp.*", "*-copy.*", "*.test.*", "*.spec.*")
    
    foreach ($pattern in $patterns) {
        Get-ChildItem -Path . -Recurse -File -Name $pattern -Exclude "node_modules" | ForEach-Object {
            $fullPath = $_.FullName
            if ($fullPath -notlike "*node_modules*") {
                try {
                    Remove-Item -Path $fullPath -Force
                    Write-Host "‚úÖ Removed pattern match: $fullPath" -ForegroundColor Green
                    $cleanedCount++
                }
                catch {
                    Write-Host "‚ùå Failed to remove: $fullPath" -ForegroundColor Red
                }
            }
        }
    }
    
    # Remove empty TypeScript files
    Get-ChildItem -Path . -Recurse -File -Include "*.ts", "*.tsx" | Where-Object { 
        $_.Length -eq 0 -and $_.DirectoryName -notlike "*node_modules*" 
    } | ForEach-Object {
        try {
            Remove-Item -Path $_.FullName -Force
            Write-Host "‚úÖ Removed empty file: $($_.FullName)" -ForegroundColor Green
            $cleanedCount++
        }
        catch {
            Write-Host "‚ùå Failed to remove empty file: $($_.FullName)" -ForegroundColor Red
        }
    }
    
    Write-Host "`nüéâ Cleanup completed! Removed $cleanedCount files." -ForegroundColor Cyan
}

# Run the cleanup
Remove-AutoGeneratedFiles

# Schedule this script to run periodically
Write-Host "`nüí° To prevent auto-generation, run this script regularly or use:" -ForegroundColor Yellow
Write-Host "npm run cleanup" -ForegroundColor Yellow
